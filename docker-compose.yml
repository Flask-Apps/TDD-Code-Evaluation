version: '3.4'

services:
  users:
    container_name: users
    build:
      context: ./services/users
      dockerfile: Dockerfile
    volumes:
      - "./services/users:/app"
    ports:
      - 5001:5000
    environment:
      # - FLASK_APP=project/__init__.py
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.config.DevelopmentConfig
      # postgresql://[user[:pw]@][netloc][:port][/dbname][?param1=value1&...]
      - DATABASE_URL=postgresql://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@users-db:5432/users_test
    depends_on:
      - users-db
  
  users-db:
    container_name: users-db
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  # client:
  #   container_name: client
  #   build:
  #     context: ./services/client
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3007:3000"
  #   volumes:
  #     - ./services/client:/app
  #     # - /usr/src/app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
  #     - REACT_APP_API_GATEWAY_URL=${REACT_APP_API_GATEWAY_URL}
  #     - REACT_APP_EXERCISES_SERVICE_URL=${REACT_APP_EXERCISES_SERVICE_URL}
  #     - REACT_APP_SCORES_SERVICE_URL=${REACT_APP_SCORES_SERVICE_URL}
  #     - CHOKIDAR_USERPOLLING=true
  #   depends_on:
  #     - users

  nginx:
    container_name: nginx
    build: ./services/nginx
    restart: always
    ports:
      - 80:80
    depends_on:
      - users